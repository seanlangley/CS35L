Exercise 1.1
1. e m a c s SP e x e r 1 . h t m l
2. C-s P U B L I C
3. C-s L a b o r a t o r y Enter M-b
4. C-s S e l f - r e f e r e n t i a l SP M-b M-b
5. C-s a r r o w Enter M-b
6. C-e
7. C-a
8. Yes, use Control key and commands.
9. No, I used commands.
10. C-x C-c

Exercise 1.2
2. C-s < ! - - Enter C-a C-k
3. C-s D E L E T E Enter C-a C-k
4. C-s h t t p s : / / e n C-s Enter C-a C-k
5. C-s < ! - - Enter C-a C-k C-s < ! - - Enter C-a C-k

Exercise 1.3
2. M-% A s s i g n m e n t Space 1 Enter A s s i g n m e n t Space 3 7 Enter y y n
3. M-% U T F space - space 8 Enter U S - A S C I I Enter y
4. C-s < / o Enter C-a Enter
5. C-x C-c y

Exercise 1.4
3. C-x-] C-p C-p C-p C-space C-n C-n C-w C-n C-n C-n C-y
4. C-space C-n C-n C-w C-x-[ C-n C-n C-n C-y
5. C-space C-] C-w
6. C-_
7. < ! - - C-] - - ! >
8. Seven instances.
C-s < o l > C-s C-s C-s C-s C-s C-s C-s
M-% < o l > Enter < O l > Enter y y y y y y y

Exercise 1.5
1. C-x-d enter + j u n k Enter
2. C-x-d j u n k Enter C-x C-f hello.c
3. M-x c o m p i l e Enter h e l l o
4. M-x c o m p i l e Enter . / h e l l o Space - o Space h e l l o - o u t
5.
-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Sat Apr  8 15:34:06

./hello -o hello-out
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n\
\
, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Sat Apr  8 15:34:06

Exercise 1.6
1. C-x-b s c r a t c h Enter
2. ( r a n d o m ) C-j
3. (setq x (random)) C-j (setq y (random)) C-j
4. -78828042525770099
This answer is not mathematically correct.
5. M-: gives the same answer with two numbers in parenthesis.
6. They're not truly random because they're generated from seed values.
